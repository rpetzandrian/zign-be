generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String    @id @default(uuid()) @db.VarChar(60)
  name              String?   @db.VarChar(255)
  email             String    @db.VarChar(255)
  password          String    @db.VarChar(100)
  card_no           String?   @db.VarChar(20)
  is_email_verified Boolean   @default(false)
  is_verified       Boolean   @default(false)
  profile_picture   String?   @db.VarChar(255)
  otp_code          String?   @db.VarChar(6)
  otp_code_expired  DateTime? @db.Timestamp(6)
  created_at        DateTime  @default(now()) @db.Timestamp(6)
  updated_at        DateTime  @default(now()) @updatedAt @db.Timestamp(6)
  deleted_at        DateTime? @db.Timestamp(6)

  @@unique([email])
  @@unique([card_no])
  @@map("users")
}

model File {
  id          String     @id @default(uuid()) @db.VarChar(60)
  key         String     @db.VarChar(255)
  bucket_name String     @db.VarChar(100)
  checksum    String     @db.VarChar(255)
  file_url    String     @db.VarChar(255)
  file_name   String     @db.VarChar(255)
  file_size   Int        @db.Integer
  mime_type   String     @db.VarChar(100)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @updatedAt @db.Timestamp(6)
  deleted_at  DateTime?  @db.Timestamp(6)
  Document    Document[]
  Sign        Sign[]

  @@unique([key])
  @@map("files")
}

model Document {
  id         String    @id @default(uuid()) @db.VarChar(60)
  user_id    String    @db.VarChar(60)
  file_id    String    @db.VarChar(60)
  sign_id    String    @db.VarChar(60)
  status     String    @db.VarChar(20)
  metadata   Json?     @db.Json
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime  @default(now()) @updatedAt @db.Timestamp(6)
  deleted_at DateTime? @db.Timestamp(6)
  File       File?     @relation(fields: [file_id], references: [id])

  @@map("documents")
}

model Sign {
  id         String    @id @default(uuid()) @db.VarChar(60)
  user_id    String    @db.VarChar(60)
  file_id    String    @db.VarChar(60)
  metadata   Json?     @db.Json
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime  @default(now()) @updatedAt @db.Timestamp(6)
  deleted_at DateTime? @db.Timestamp(6)
  file       File?     @relation(fields: [file_id], references: [id])

  @@map("signs")
}
